* {
  padding: 0;
  margin: 0;
  box-sizing: border-box;
  font-family: "mont";
  color: white;
}

.container {
  display: flex;
  width: 100%;
  height: 100vh;
  justify-content: center;
  align-items: center;
  flex-direction: column;
}

.titre {
  margin-top: 60px;
  display: flex;
  flex-direction: row;
  justify-content: center;
  height: 205px;
}

h1 {
  font-size: 12em;
}

h2 {
  margin-bottom: 20px;
}

h3 {
  font-size: 2em;
}

p {
  margin: 5px;
}

.text {
  text-align: center;
}

body {
  width: 100%;
  height: 300vh;
  overflow-y: hidden;
  background: linear-gradient(180deg, rgb(36, 44, 70) 0%, rgb(82, 0, 99) 47%, rgb(0, 89, 107) 100%);
}

@font-face {
  font-family: "mont";
  src: url("fonts/Mont-HeavyDEMO.otf") format("opentype");
}
@font-face {
  font-family: "mont-light";
  src: url("fonts/Mont-ExtraLightDEMO.otf") format("opentype");
}
/* Our mixin positions a copy of our text
directly on our existing text, while
also setting content to the appropriate
text set in the data-text attribute. */
.glitch {
  position: relative;
  color: rgb(255, 255, 255);
  font-size: 12em;
  letter-spacing: 0.05em;
  /* Animation provies a slight random skew. Check bottom of doc
  for more information on how to random skew. */
  animation: glitch-skew 1s infinite linear alternate-reverse;
}
.glitch::before {
  content: attr(data-text);
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  left: 2px;
  text-shadow: -2px 0 #ff00c1;
  /* Creates an initial clip for our glitch. This works in
  a typical top,right,bottom,left fashion and creates a mask
  to only show a certain part of the glitch at a time. */
  clip: rect(44px, 450px, 56px, 0);
  /* Runs our glitch-anim defined below to run in a 5s loop, infinitely,
  with an alternating animation to keep things fresh. */
  animation: glitch-anim 5s infinite linear alternate-reverse;
}
.glitch::after {
  content: attr(data-text);
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  left: -2px;
  text-shadow: -2px 0 #00fff9, 2px 2px #ff00c1;
  animation: glitch-anim2 1s infinite linear alternate-reverse;
}

/* Creates an animation with 20 steaps. For each step, it calculates 
a percentage for the specific step. It then generates a random clip
box to be used for the random glitch effect. Also adds a very subtle
skew to change the 'thickness' of the glitch.*/
@keyframes glitch-anim {
  0% {
    clip: rect(11px, 9999px, 69px, 0);
    transform: skew(0.44deg);
  }
  5% {
    clip: rect(49px, 9999px, 90px, 0);
    transform: skew(0.25deg);
  }
  10% {
    clip: rect(49px, 9999px, 94px, 0);
    transform: skew(0.13deg);
  }
  15% {
    clip: rect(75px, 9999px, 51px, 0);
    transform: skew(0.01deg);
  }
  20% {
    clip: rect(29px, 9999px, 11px, 0);
    transform: skew(0.31deg);
  }
  25% {
    clip: rect(33px, 9999px, 97px, 0);
    transform: skew(0.36deg);
  }
  30% {
    clip: rect(21px, 9999px, 80px, 0);
    transform: skew(0.79deg);
  }
  35% {
    clip: rect(4px, 9999px, 79px, 0);
    transform: skew(0.68deg);
  }
  40% {
    clip: rect(78px, 9999px, 77px, 0);
    transform: skew(0.1deg);
  }
  45% {
    clip: rect(12px, 9999px, 84px, 0);
    transform: skew(0.32deg);
  }
  50% {
    clip: rect(90px, 9999px, 20px, 0);
    transform: skew(0.27deg);
  }
  55% {
    clip: rect(69px, 9999px, 98px, 0);
    transform: skew(0.24deg);
  }
  60% {
    clip: rect(89px, 9999px, 99px, 0);
    transform: skew(0.77deg);
  }
  65% {
    clip: rect(22px, 9999px, 52px, 0);
    transform: skew(0.93deg);
  }
  70% {
    clip: rect(24px, 9999px, 51px, 0);
    transform: skew(0.49deg);
  }
  75% {
    clip: rect(36px, 9999px, 42px, 0);
    transform: skew(0.19deg);
  }
  80% {
    clip: rect(60px, 9999px, 56px, 0);
    transform: skew(0.9deg);
  }
  85% {
    clip: rect(53px, 9999px, 17px, 0);
    transform: skew(0.87deg);
  }
  90% {
    clip: rect(71px, 9999px, 34px, 0);
    transform: skew(0.45deg);
  }
  95% {
    clip: rect(96px, 9999px, 93px, 0);
    transform: skew(0.37deg);
  }
  100% {
    clip: rect(1px, 9999px, 5px, 0);
    transform: skew(0.71deg);
  }
}
@keyframes glitch-anim2 {
  0% {
    clip: rect(7px, 9999px, 42px, 0);
    transform: skew(0.42deg);
  }
  5% {
    clip: rect(99px, 9999px, 100px, 0);
    transform: skew(0.25deg);
  }
  10% {
    clip: rect(58px, 9999px, 3px, 0);
    transform: skew(0.82deg);
  }
  15% {
    clip: rect(16px, 9999px, 59px, 0);
    transform: skew(0.5deg);
  }
  20% {
    clip: rect(52px, 9999px, 54px, 0);
    transform: skew(0.13deg);
  }
  25% {
    clip: rect(10px, 9999px, 28px, 0);
    transform: skew(0.05deg);
  }
  30% {
    clip: rect(76px, 9999px, 39px, 0);
    transform: skew(0.88deg);
  }
  35% {
    clip: rect(77px, 9999px, 40px, 0);
    transform: skew(0.19deg);
  }
  40% {
    clip: rect(38px, 9999px, 60px, 0);
    transform: skew(0.11deg);
  }
  45% {
    clip: rect(82px, 9999px, 50px, 0);
    transform: skew(0.33deg);
  }
  50% {
    clip: rect(23px, 9999px, 18px, 0);
    transform: skew(0.42deg);
  }
  55% {
    clip: rect(38px, 9999px, 19px, 0);
    transform: skew(0.92deg);
  }
  60% {
    clip: rect(10px, 9999px, 79px, 0);
    transform: skew(0.4deg);
  }
  65% {
    clip: rect(10px, 9999px, 45px, 0);
    transform: skew(0.24deg);
  }
  70% {
    clip: rect(79px, 9999px, 46px, 0);
    transform: skew(0.02deg);
  }
  75% {
    clip: rect(60px, 9999px, 39px, 0);
    transform: skew(0.27deg);
  }
  80% {
    clip: rect(99px, 9999px, 77px, 0);
    transform: skew(0.4deg);
  }
  85% {
    clip: rect(23px, 9999px, 75px, 0);
    transform: skew(0.05deg);
  }
  90% {
    clip: rect(26px, 9999px, 73px, 0);
    transform: skew(0.74deg);
  }
  95% {
    clip: rect(97px, 9999px, 91px, 0);
    transform: skew(0.72deg);
  }
  100% {
    clip: rect(46px, 9999px, 17px, 0);
    transform: skew(0.27deg);
  }
}
@keyframes glitch-skew {
  0% {
    transform: skew(2deg);
  }
  10% {
    transform: skew(-3deg);
  }
  20% {
    transform: skew(4deg);
  }
  30% {
    transform: skew(5deg);
  }
  40% {
    transform: skew(3deg);
  }
  50% {
    transform: skew(-1deg);
  }
  60% {
    transform: skew(-1deg);
  }
  70% {
    transform: skew(-2deg);
  }
  80% {
    transform: skew(1deg);
  }
  90% {
    transform: skew(2deg);
  }
  100% {
    transform: skew(3deg);
  }
}

/*# sourceMappingURL=style.css.map */
